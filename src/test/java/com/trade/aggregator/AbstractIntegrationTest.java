package com.trade.aggregator;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.mockserver.client.MockServerClient;
import org.mockserver.configuration.ConfigurationProperties;
import org.mockserver.integration.ClientAndServer;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.reactive.AutoConfigureWebTestClient;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.web.reactive.server.WebTestClient;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;

@AutoConfigureWebTestClient
@SpringBootTest(properties = {
        "customer.service.url=http://localhost:1080",
        "stock.service.url=http://localhost:1080"
})
abstract class AbstractIntegrationTest {
    private static final Path TEST_RESOURCES_PATH = Path.of("src/test/resources");

    @Autowired
    protected WebTestClient client;

    // Create a reference for the mock server, it does not require annotation because mockserver injects it automatically
    protected static ClientAndServer mockServer;
    protected static MockServerClient mockServerClient;

    @BeforeAll
    public static void setup() {
        // with the following statement, the excesive logging generated by mockserver is not displayed
        ConfigurationProperties.logLevel("ERROR");

        // Start the server on a free port, e.g., port 1080 (the default)
        mockServer = ClientAndServer.startClientAndServer(1080);
        mockServerClient = new MockServerClient("localhost", 1080);
    }

    @AfterAll
    public static void stopMockServer() {
        mockServer.stop();
    }

    protected String resourceToString(String relativePath) {
        try {
            return Files.readString(TEST_RESOURCES_PATH.resolve(relativePath));
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }
}
